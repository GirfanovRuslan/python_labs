import sys  # Импорт модуля для работы с системными параметрами Python
import os   # Импорт модуля для работы с операционной системой

# Настройка путей импорта: добавляем корневую папку проекта в sys.path
# __file__ - путь к текущему файлу
# os.path.abspath(__file__) - получаем абсолютный путь к файлу
# os.path.dirname() - получаем папку, содержащую указанный путь
# Дважды dirname() - поднимаемся на 2 уровня вверх по директориям
# sys.path.insert(0, ...) - добавляем этот путь в начало списка поиска модулей
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Импорт функций из других модулей проекта
from lab04.io_txt_csv import read_text, write_csv  # Функции для работы с файлами из Задания A
from lib.text import normalize, tokenize, count_freq, top_n  # Функции обработки текста из ЛР3

# Основной код обработки текста и генерации отчета:

# 1. Чтение текста из файла
# read_text() открывает файл и возвращает его содержимое как строку
text = read_text("src/data/lab04/input.txt")

# 2. Обработка текста и подсчет частот слов
# normalize() - приводит текст к стандартному виду (нижний регистр, замена ё на е и т.д.)
# tokenize() - разбивает текст на отдельные слова/токены
# count_freq() - подсчитывает сколько раз каждое слово встречается в тексте
freq = count_freq(tokenize(normalize(text)))

# 3. Запись результатов в CSV файл
# freq.items() - возвращает пары (слово, частота)
# sorted() - сортирует слова по частоте (убывание) и по алфавиту (возрастание)
# key=lambda x: (-x[1], x[0]) - сортировка сначала по частоте (убывание), потом по слову (возрастание)
# write_csv() - записывает отсортированные данные в CSV файл с заголовком
write_csv(sorted(freq.items(), key=lambda x: (-x[1], x[0])), 
          "src/data/lab04/report.csv", 
          header=("word", "count"))

# Вывод статистики в консоль:

# 1. Общая статистика
# sum(freq.values()) - сумма всех значений частот (общее количество слов)
# len(freq) - количество уникальных слов (ключей в словаре)
print(f"Слов: {sum(freq.values())}, Уникальных: {len(freq)}")

# 2. Топ-5 самых частых слов
# top_n(freq, 5) - возвращает 5 самых частых слов
# [f"{w}:{c}" for w, c in ...] - создает список строк в формате "слово:частота"
# *[...] - распаковывает список в отдельные аргументы для print()
print("Топ-5:", *[f"{w}:{c}" for w, c in top_n(freq, 5)])