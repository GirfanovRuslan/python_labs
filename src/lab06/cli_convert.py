#!/usr/bin/env python3
"""
CLI-—É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Ñ–æ—Ä–º–∞—Ç–∞–º–∏
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ lab05
"""

import argparse
import sys
from pathlib import Path

def setup_argparse():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏"""
    parser = argparse.ArgumentParser(
        description="CLI-—É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –õ–†5)",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  python cli_convert.py json2csv --in input.json --out output.csv
  python cli_convert.py csv2json --in data.csv --out data.json  
  python cli_convert.py csv2xlsx --in data.csv --out data.xlsx
        """
    )
    
    subparsers = parser.add_subparsers(
        dest="command", 
        help="–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏",
        required=True,
        metavar="COMMAND"
    )

    # –ü–æ–¥–∫–æ–º–∞–Ω–¥–∞ json2csv
    json2csv_parser = subparsers.add_parser("json2csv", help="–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å JSON –≤ CSV")
    json2csv_parser.add_argument(
        "--in", 
        dest="input", 
        required=True,
        type=validate_input_file,
        help="–í—Ö–æ–¥–Ω–æ–π JSON —Ñ–∞–π–ª"
    )
    json2csv_parser.add_argument(
        "--out", 
        dest="output", 
        required=True,
        type=validate_output_path,
        help="–í—ã—Ö–æ–¥–Ω–æ–π CSV —Ñ–∞–π–ª"
    )

    # –ü–æ–¥–∫–æ–º–∞–Ω–¥–∞ csv2json
    csv2json_parser = subparsers.add_parser("csv2json", help="–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å CSV –≤ JSON")
    csv2json_parser.add_argument(
        "--in", 
        dest="input", 
        required=True,
        type=validate_input_file,
        help="–í—Ö–æ–¥–Ω–æ–π CSV —Ñ–∞–π–ª"
    )
    csv2json_parser.add_argument(
        "--out", 
        dest="output", 
        required=True,
        type=validate_output_path,
        help="–í—ã—Ö–æ–¥–Ω–æ–π JSON —Ñ–∞–π–ª"
    )

    # –ü–æ–¥–∫–æ–º–∞–Ω–¥–∞ csv2xlsx
    csv2xlsx_parser = subparsers.add_parser("csv2xlsx", help="–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å CSV –≤ XLSX")
    csv2xlsx_parser.add_argument(
        "--in", 
        dest="input", 
        required=True,
        type=validate_input_file,
        help="–í—Ö–æ–¥–Ω–æ–π CSV —Ñ–∞–π–ª"
    )
    csv2xlsx_parser.add_argument(
        "--out", 
        dest="output", 
        required=True,
        type=validate_output_path,
        help="–í—ã—Ö–æ–¥–Ω–æ–π XLSX —Ñ–∞–π–ª"
    )

    return parser

def validate_input_file(file_path: str) -> Path:
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
    if not file_path or not isinstance(file_path, str):
        raise argparse.ArgumentTypeError("–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π")
    
    path = Path(file_path)
    
    if not path.exists():
        raise argparse.ArgumentTypeError(f"–§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    if not path.is_file():
        raise argparse.ArgumentTypeError(f"{file_path} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∞–π–ª–æ–º")
    
    try:
        if path.stat().st_size == 0:
            raise argparse.ArgumentTypeError(f"–§–∞–π–ª {file_path} –ø—É—Å—Ç–æ–π")
    except PermissionError:
        raise argparse.ArgumentTypeError(f"–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É {file_path}")
    except OSError as e:
        raise argparse.ArgumentTypeError(f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É {file_path}: {e}")
    
    return path

def validate_output_path(file_path: str) -> Path:
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Ç–∏ –¥–ª—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
    if not file_path or not isinstance(file_path, str):
        raise argparse.ArgumentTypeError("–ü—É—Ç—å –¥–ª—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π")
    
    path = Path(file_path)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω–∞
    parent_dir = path.parent
    if parent_dir.exists() and not parent_dir.is_dir():
        raise argparse.ArgumentTypeError(f"–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –ø—É—Ç—å {parent_dir} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω
    if path.exists():
        if not path.is_file():
            raise argparse.ArgumentTypeError(f"{file_path} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∞–π–ª–æ–º")
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏
            path.touch()
        except PermissionError:
            raise argparse.ArgumentTypeError(f"–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª {file_path}")
        except OSError as e:
            raise argparse.ArgumentTypeError(f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É {file_path}: {e}")
    
    # –°–æ–∑–¥–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    parent_dir.mkdir(parents=True, exist_ok=True)
    
    return path

def check_lab5_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –õ–†5"""
    try:
        from lab05.json_csv import json_to_csv, csv_to_json
        from lab05.csv_xlsx import csv_to_xlsx
        return True
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –º–æ–¥—É–ª–∏ –∏–∑ –õ–†5: {e}", file=sys.stderr)
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ json_to_csv, csv_to_json, csv_to_xlsx –¥–æ—Å—Ç—É–ø–Ω—ã", file=sys.stderr)
        return False

def json_to_csv_cli(args):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è JSON –≤ CSV —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –õ–†5"""
    if not check_lab5_dependencies():
        sys.exit(1)
    
    from lab05.json_csv import json_to_csv
    
    try:
        json_to_csv(str(args.input), str(args.output))
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {args.input} -> {args.output}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ JSON –≤ CSV: {e}", file=sys.stderr)
        # –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        if args.output.exists():
            try:
                args.output.unlink()
                print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω —á–∞—Å—Ç–∏—á–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: {args.output}", file=sys.stderr)
            except:
                pass
        sys.exit(1)

def csv_to_json_cli(args):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è CSV –≤ JSON —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –õ–†5"""
    if not check_lab5_dependencies():
        sys.exit(1)
    
    from lab05.json_csv import csv_to_json
    
    try:
        csv_to_json(str(args.input), str(args.output))
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {args.input} -> {args.output}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ CSV –≤ JSON: {e}", file=sys.stderr)
        # –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        if args.output.exists():
            try:
                args.output.unlink()
                print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω —á–∞—Å—Ç–∏—á–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: {args.output}", file=sys.stderr)
            except:
                pass
        sys.exit(1)

def csv_to_xlsx_cli(args):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è CSV –≤ XLSX —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –õ–†5"""
    if not check_lab5_dependencies():
        sys.exit(1)
    
    from lab05.csv_xlsx import csv_to_xlsx
    
    try:
        csv_to_xlsx(str(args.input), str(args.output))
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {args.input} -> {args.output}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ CSV –≤ XLSX: {e}", file=sys.stderr)
        # –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        if args.output.exists():
            try:
                args.output.unlink()
                print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω —á–∞—Å—Ç–∏—á–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: {args.output}", file=sys.stderr)
            except:
                pass
        sys.exit(1)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è CLI"""
    parser = setup_argparse()
    
    try:
        args = parser.parse_args()
    except argparse.ArgumentError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö: {e}", file=sys.stderr)
        sys.exit(1)
    except SystemExit:
        return

    # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
    if args.command == "json2csv":
        json_to_csv_cli(args)
    elif args.command == "csv2json":
        csv_to_json_cli(args)
    elif args.command == "csv2xlsx":
        csv_to_xlsx_cli(args)
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {args.command}", file=sys.stderr)
        parser.print_help()
        sys.exit(1)

if __name__ == "__main__":
    main()